name: Another Workflow

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: version to tag release
        required: true
      deploy_target:
        type: choice
        required: true
        default: production-preflight
        options:
          - production-preflight
          - production

jobs:
  build_and_deploy:
    name: "Build App and Push ${{ github.event.inputs.tag_name }} to Release"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: "Checkout tag_name"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag_name }}
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check that merge will be FF
        run: |
          git merge-base --is-ancestor origin/staging ${{ github.event.inputs.tag_name }}

      - name: Something to do
        run: |
          echo ${{ github.event.inputs.tag_name }}
      
      - name: "Can I have a dynamic name - tag: ${{ github.event.inputs.tag_name }}"
        run: echo "yup, it worked"

      - name: "check some bashy stuff"
        run: |
          if [ ${{ github.event.inputs.deploy_target }} == "production-preflight" ]; then s3bucket="preflight-bucket"; fi
          if [ ${{ github.event.inputs.deploy_target }} == "production" ]; then s3bucket="latest-bucket"; fi

          echo $s3bucket

      # - name: Fake Build App
      #   run: |
      #     mkdir dist
      #     cp *.* ./dist
      
      # - name: Create version.json
      #   run: |
      #     echo "{ \""ui"\": \""$(git log --pretty=format:'%h' -n 1)"\", \""version"\": \"${{ github.event.inputs.tag_name }}\" }" > ./dist/version.json
