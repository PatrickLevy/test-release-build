name: Create Release
on:
  workflow_dispatch:
    inputs:
      commit:
        description: commit to build release
      tag_name:
        description: version to tag release

jobs:
  build_and_deploy:
    name: Build App and Push to Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # - name: Check Node Config
      #   run: |
      #     node -v
      #     npm config set spin false
      # - name: Install Dependencies
      #   run: npm ci

      - name: Fake Build App
        run: |
          mkdir dist
          echo TEST > ./dist/test
      
      - name: Create version.json
        run: |
          echo "{ \""ui"\": \""$(git log --pretty=format:'%h' -n 1)"\", \""version"\": \"${{ github.event.inputs.tag_name }}\" }" > ./dist/version.json

      # Create an artifact of the dist folder for creating releases (stable, stable-delayed, stable-hotfix)

      # Push the dist.zip up to a draft release (create a new draft release if one doesn't exist)
      - name: Zip up the dist folder
        if: github.ref == 'refs/heads/stable'
        run: (cd dist && zip -r ../dist.zip .)

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          # draft: true
          target_commitish: ${{ github.event.inputs.commit }}
          tag_name: ${{ github.event.inputs.tag_name }}
          prerelease: true
          name: Release ${{ github.event.inputs.tag_name }}
          # token: ${{ secrets.OPS_GITHUB_BOT_TOKEN }}
          token: ${{ secrets.token }}
          files: |
            dist.zip
